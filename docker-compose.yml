version: '3'

networks:
  orca:


services:
  minio:
    container_name: minio-ser
    restart: on-failure
    image: minio/minio
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      - MINIO_BROWSER_REDIRECT_URL=http://localhost:9001
      - MINIO_DEFAULT_BUCKETS=orca
    command: server /data --console-address ":9001"
    volumes:
      - './data/minio_data:/data'

  chrome:
    platform: linux/amd64
    image: selenium/node-chrome:nightly
    shm_size: 2gb
    depends_on:
      - selenium-hub
    environment:
      - SE_EVENT_BUS_HOST=selenium-hub
      - SE_EVENT_BUS_PUBLISH_PORT=4442
      - SE_EVENT_BUS_SUBSCRIBE_PORT=4443
      - SE_NODE_MAX_CONCURRENT_SESSIONS=5

  firefox:
    container_name: firefox
    platform: linux/amd64
    image: selenium/node-firefox:nightly
    shm_size: 2gb
    depends_on:
      - selenium-hub
    environment:
      - SE_EVENT_BUS_HOST=selenium-hub
      - SE_EVENT_BUS_PUBLISH_PORT=4442
      - SE_EVENT_BUS_SUBSCRIBE_PORT=4443
      - SE_NODE_MAX_CONCURRENT_SESSIONS=1
      - SE_NODE_MAX_SESSIONS=1

  firefox_video:
    platform: linux/amd64
    image: selenium/video:nightly
    depends_on:
      - firefox
      - minio
    environment:
      - DISPLAY_CONTAINER_NAME=firefox
      - SE_VIDEO_FILE_NAME=auto
      - SE_VIDEO_UPLOAD_ENABLED=true
      - SE_VIDEO_INTERNAL_UPLOAD=true
      - SE_NODE_MAX_CONCURRENT_SESSIONS=5
      - SE_NODE_MAX_SESSIONS=5
      - SE_UPLOAD_DESTINATION_PREFIX=s3://orca/session
      - RCLONE_CONFIG_S3_TYPE=s3
      - RCLONE_CONFIG_S3_PROVIDER=Minio
      - RCLONE_CONFIG_S3_ENV_AUTH=false
      - RCLONE_CONFIG_S3_REGION=us-east-1
      #      - RCLONE_CONFIG_S3_LOCATION_CONSTRAINT=asia-southeast1
      - RCLONE_CONFIG_S3_ACL=private
      - RCLONE_CONFIG_S3_ACCESS_KEY_ID=minioadmin
      - RCLONE_CONFIG_S3_SECRET_ACCESS_KEY=minioadmin
      - RCLONE_CONFIG_S3_ENDPOINT=http://minio-ser:9000

  #  chrome_video:
  #    image: selenium/video:ffmpeg-4.3.1-20221208
  #    volumes:
  #      - /tmp/videos:/videos
  #    depends_on:
  #      - chrome
  #    environment:
  #      - DISPLAY_CONTAINER_NAME=chrome
  #      - FILE_NAME=chrome_video.mp4

  #  firefox_video:
  #    platform: linux/amd64
  #    image: selenium/video:ffmpeg-4.3.1-20221208
  #    volumes:
  #      - /Users/vasanth/Documents/commit/OpenSource/orcan/orca/to/config/video:/videos
  #    depends_on:
  #      - firefox
  #    environment:
  #      - DISPLAY_CONTAINER_NAME=firefox
  #      - FILE_NAME=firefox_video.mp4

  selenium-hub:
    platform: linux/amd64
    image: selenium/hub:nightly
    container_name: selenium-hub
    ports:
      - "4442:4442"
      - "4443:4443"
      - "4444:4444"

  ### PostgreSQL ################################################
  postgres-ser:
    image: postgres:14-alpine
    restart: always
    environment:
      - POSTGRES_USER=root
      - POSTGRES_PASSWORD=root
      - POSTGRES_DB=orca
      # - PGDATA=/var/lib/postgresql/data/some_name/
    ports:
      - "5433:5432"
    volumes:
      - ./data/pg-data:/var/lib/postgresql/data
    container_name: postgres-ser

  ### Redis ################################################
  redis-ser:
    image: redis:6-alpine
    ports:
      - "6379:6379"
    container_name: redis-ser
    command: redis-server --save "" --appendonly no

#
#  timescaledb:
#    image: timescale/timescaledb:latest-pg12
#    restart: always
#    ports:
#      - "5432:5432"
#    environment:
#      POSTGRES_USER: timescaledb
#      POSTGRES_PASSWORD: password
#    volumes:
#      - "./data/timescaledb:/var/lib/postgresql/data"
#
#
#  loki:
#    image: grafana/loki:2.9.4
#    ports:
#      - "3100:3100"
#    command: -config.file=/etc/loki/local-config.yaml
#    networks:
#      - orca
#
#  promtail:
#    image: grafana/promtail:2.9.4
#    volumes:
#      - "/var/orca/log:/var/log"
#    command: -config.file=/etc/promtail/config.yml
#    networks:
#      - orca
#
#  grafana:
#    environment:
#      - GF_PATHS_PROVISIONING=/etc/grafana/provisioning
#      - GF_AUTH_ANONYMOUS_ENABLED=true
#      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
#    entrypoint:
#      - sh
#      - -euc
#      - |
#        mkdir -p /etc/grafana/provisioning/datasources
#        cat <<EOF > /etc/grafana/provisioning/datasources/ds.yaml
#        apiVersion: 1
#        datasources:
#        - name: Loki
#          type: loki
#          access: proxy
#          orgId: 1
#          url: http://loki:3100
#          basicAuth: false
#          isDefault: true
#          version: 1
#          editable: false
#        EOF
#        /run.sh
#    image: grafana/grafana:latest
#    ports:
#      - "4000:3000"
#    networks:
#      - orca


volumes:
  data: